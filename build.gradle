/*
 * This build file was auto generated by running the Gradle 'buildSetup' task
 * by 'rob' at 'Sat Jul 06 20:39:20 EDT 2013' with Gradle 1.6
 *
 * This generated file contains an out - commented sample java project
 * to get you started. For a quick start with Gradle have a look at the Java Quickstart
 * chapter in the Gradle Userguide available at /Users/rob/.gvm/gradle/1.6/docs/userguide/tutorial_java_projects.html
 */
project.ext {
	sourceCompatibility = 1.7
	version = '0.2.2'
	app_name = 'Diffusive'
}

gradle.taskGraph.whenReady { taskGraph ->
	if( taskGraph.hasTask( release ) ) {
		version = project.ext.version
	} else {
		version = project.ext.version + '-SNAPSHOT'
	}
}

apply plugin: 'java' // applies the java plugin

repositories {
	// point to "maven central" to resolve 3rd party dependencies
	mavenCentral()
}

dependencies {
	// the production code uses log4j logging api at compile time
	compile 'log4j:log4j:1.2.17'

	// javassit byte-code engineering library used to divert diffused methods at class load time
	compile 'javassist:javassist:3.12.1.GA'

	// command line options parsing library
	compile 'net.sf.jopt-simple:jopt-simple:4.5'

	// abdera atom/rss parser
	compile 'org.apache.abdera:abdera-parser:1.1.3'

	// jersey JAX-RS implementation for REST web services server and client
	compile 'com.sun.jersey:jersey-bundle:1.17.1'
	compile 'com.sun.jersey:jersey-grizzly2:1.17.1'

	// apache commons
	compile 'org.apache.commons:commons-io:1.3.2'

	// freezedry persistence JAR
	compile files( 'ext-libs/FreezeDry_0.2.6.jar' )

	// for testing
	testCompile 'junit:junit:4.11'
}

// manifest to be shared by all the jars we create
project.ext.sharedManifest = manifest {
	attributes(
			"Implementation-Vendor": "Rob Philipp",
			"Implementation-Title": project.ext.app_name,
			"Implementation-Version": project.ext.version
	)
}

//task make_launcher_jar( type: Jar, dependsOn: build ) {
jar {
	manifest {
		attributes(
				"Main-Class": "org/microtitan/diffusive/launcher/DiffusiveLauncher",
//                "Class-Path":jar_class_path
		)
		from project.sharedManifest
	}
}

task release {

}

