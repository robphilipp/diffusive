<?xml version="1.0" encoding="UTF-8" ?>
<project name="Diffusive" default="make_release" basedir=".">

	<!-- =====================================================================
							   S E T T I N G S
	     ===================================================================== -->
	<!-- 
		version information 
	-->
	<property name="version" value="0.1.3" />

	<!-- 
		set global properties for this build
	 -->
	<property name="src" location="src" />
	<property name="build" location="bin" />
	<property name="dist" location="dist" />
	<property name="release" location="Diffusive_v${version}" />
	<property name="libs" value="lib" />
	<property name="docs" value="docs" />

	<property name="app_name" value="Diffusive" />
	<property name="app_type_launcher" value="Launcher" />
	<property name="app_type_server" value="Server" />

	<!-- 
		set the run configuration files
	-->
	<property name="restful_server_config" value="restful_server_config.xml"/>
	<property name="restful_diffuser_config" value="restful_diffuser_config.xml"/>
	<property name="random_diffuser_strategy_config" value="random_diffuser_strategy.xml"/>
	<property name="random_weighted_diffuser_strategy_config" value="random_weighted_diffuser_strategy.xml"/>

	<!-- =====================================================================
						   D E P E N D E N C I E S
	     ===================================================================== -->
	<!-- 
		jUnit
	-->
	<property name="junit" value="junit-4.8.1.jar" />
	
	<!--
		log4j
	-->
	<property name="log4j" value="log4j-1.2.15.jar" />
	<property name="log4j_config" value="log4j.xml" />
	
	<!-- 
		FreezeDry (serialization)
	-->
	<property name="freezedry" value="FreezeDry_0.2.4.jar" />
	<property name="json" value="json-20120228.jar" />

	<!-- 
		Atom (Abdera, messages)
	-->
	<property name="abdera_core" value="abdera-core-1.1.2.jar" />
	<property name="abdera_i18n" value="abdera-i18n-1.1.2.jar" />
	<property name="abdera_parser" value="abdera-parser-1.1.2.jar" />
	<property name="axiom_api" value="axiom-api-1.2.10.jar" />
	<property name="axiom_impl" value="axiom-impl-1.2.10.jar" />
	<property name="commons-logging" value="commons-logging-1.0.4.jar" />
	
	<!-- 
		Jersey (JSR 311, JAX-RS)
	-->
	<property name="grizzly_framework" value="grizzly-framework-2.2.1.jar" />
	<property name="grizzly_http" value="grizzly-http-2.2.1.jar" />
	<property name="grizzly_http_server" value="grizzly-http-server-2.2.1.jar" />
	<property name="jersey_client" value="jersey-client-1.12.jar" />
	<property name="jersey_core" value="jersey-core-1.12.jar" />
	<property name="jersey_grizzly" value="jersey-grizzly2-1.12.jar" />
	<property name="jersey_server" value="jersey-server-1.12.jar" />
	<property name="jsr311_api" value="jsr311-api-1.1.1.jar" />
	
	<!-- 
		Javassist (byte-code engineering)
	-->
	<property name="javassist" value="javassist.jar" />

	<!-- 
		Apache Commons IO (stream conversions)
	-->
	<property name="commons_io" value="commons-io-2.4.jar" />

	<!-- =====================================================================
					  B U I L D   C O N F I G U R A T I O N
	     ===================================================================== -->
	<!--
		java libs directory for building one giant jar file containing all 
		the dependencies
	-->
	<property environment="env"/>
	<property name="java-libs" value="${env.JAVA_LIBS}" />
	<property name="json-libs" value="json"/>
	<property name="abdera-libs" value="abdera" />
	<property name="jersey-libs" value="jersey" />
	<property name="javassist-libs" value="javassist" />
	<property name="commons-io-libs" value="apache_commons_io" />
	<property name="internal_class_path" value="${junit} 
												${log4j}
												${freezedry} 
												${json} 
												${abdera_core} 
												${abdera_i18n} 
												${abdera_parser} 
												${axiom_api} 
												${axiom_impl} 
												${commons-logging} 
												${grizzly_framework} 
												${grizzly_http} 
												${grizzly_http_server} 
												${jersey_client} 
												${jersey_core} 
												${jersey_grizzly} 
												${jersey_server} 
												${jsr311_api} 
												${javassist} 
												${commons_io}"/>


	<!-- 
		jar dependencies when building a jar that looks in a lib directory for
		the dependencies at runtime 
	-->
	<property name="class_path" value="${junit} 
										${log4j}
										${freezedry} 
										${json} 
										${abdera_core} 
										${abdera_i18n} 
										${abdera_parser} 
										${axiom_api} 
										${axiom_impl} 
										${commons-logging} 
										${grizzly_framework} 
										${grizzly_http} 
										${grizzly_http_server} 
										${jersey_client} 
										${jersey_core} 
										${jersey_grizzly} 
										${jersey_server} 
										${jsr311_api} 
										${javassist} 
										${commons_io}"/>

	<!-- =====================================================================
								T A R G E T S
	     ===================================================================== -->

	<!-- 
		Target: init
		
		Sets up the directories for building the jars
	-->
	<target name="init" description="sets up directories for building">
		<mkdir dir="${src}" />
		<mkdir dir="${build}" />
		<mkdir dir="${dist}" />
	</target>

	<!-- 
		Target: copy_dependencies
	-->
	<target name="copy_dependencies" depends="init" description="copies the dependencies into lib">
		<mkdir dir="${dist}/lib" />
		<copy file="${java-libs}/${junit}" todir="${dist}/lib" />
		<copy file="${java-libs}/${log4j}" todir="${dist}/lib" />

		<copy file="${java-libs}/${freezedry}" todir="${dist}/lib" />
		<copy file="${java-libs}/${json-libs}/${json}" todir="${dist}/lib" />

		<copy file="${java-libs}/${abdera-libs}/${abdera_core}" todir="${dist}/lib" />
		<copy file="${java-libs}/${abdera-libs}/${abdera_i18n}" todir="${dist}/lib" />
		<copy file="${java-libs}/${abdera-libs}/${abdera_parser}" todir="${dist}/lib" />
		<copy file="${java-libs}/${abdera-libs}/${axiom_api}" todir="${dist}/lib" />
		<copy file="${java-libs}/${abdera-libs}/${axiom_impl}" todir="${dist}/lib" />
		<copy file="${java-libs}/${abdera-libs}/${commons-logging}" todir="${dist}/lib" />
		
		<copy file="${java-libs}/${jersey-libs}/${grizzly_framework}" todir="${dist}/lib" />
		<copy file="${java-libs}/${jersey-libs}/${grizzly_http}" todir="${dist}/lib" />
		<copy file="${java-libs}/${jersey-libs}/${grizzly_http_server}" todir="${dist}/lib" />
		<copy file="${java-libs}/${jersey-libs}/${jersey_client}" todir="${dist}/lib" />
		<copy file="${java-libs}/${jersey-libs}/${jersey_core}" todir="${dist}/lib" />
		<copy file="${java-libs}/${jersey-libs}/${jersey_grizzly}" todir="${dist}/lib" />
		<copy file="${java-libs}/${jersey-libs}/${jersey_server}" todir="${dist}/lib" />
		<copy file="${java-libs}/${jersey-libs}/${jsr311_api}" todir="${dist}/lib" />
		
		<copy file="${java-libs}/${javassist-libs}/${javassist}" todir="${dist}/lib" />

		<copy file="${java-libs}/${commons-io-libs}/${commons_io}" todir="${dist}/lib" />
	</target>

	<!--
		Target: clean_dist
		
		removes the distribution directory and all its contents
	-->
	<target name="clean_dist" description="removes the dist directory">
		<delete dir="${dist}" failonerror="false"/>
	</target>

	<!--
		Target: configure_logging
		
		copies the log4j logging configuration files into the distribution directory
	-->
	<target name="configure_logging" description="copies to log4j.properties file to the dist directory">
		<copy file="log4j.xml" todir="${dist}" failonerror="false" />
	</target>


	<!-- 
		Target: make_launcher_jar
		
		builds a jar that contains only the Diffusive classes 
	-->
	<property name="jars" value="jars" />
	<property name="launcher_jar_file" value="${app_name}_${app_type_launcher}_${version}.jar" />
	<target name="make_launcher_jar" depends="clean_dist, init, configure_logging" description="build the launcher jar file containing only Diffusive classes">
		<echo>***** Building single jar file for ${app_name} *****</echo>
		<echo>Base Directory: ${basedir}</echo>
		<echo>Directory containing classes: ${build}</echo>
		<echo>Directory to contain jar: ${dist}/${jars}</echo>
		<echo>Directory contianing external libraries: ${env.JAVA_LIBS}</echo>

		<jar destfile="${dist}/${jars}/${launcher_jar_file}">
			<fileset dir="${build}" includes="**/*.class" />
			<fileset dir="${build}" includes="${log4j_config}" />

			<manifest>
				<attribute name="Ant" value="${user.name}" />
				<!-- Information about the program itself -->
				<attribute name="Implementation-Vendor" value="Rob Philipp" />
				<attribute name="Implementation-Title" value="${app_name}" />
				<attribute name="Implementation-Version" value="${version}" />
				<!-- Runtime information -->
				<attribute name="Main-Class" value="org/microtitan/diffusive/launcher/DiffusiveLoader" />
				<attribute name="Class-Path" value="${internal_class_path}" />
			</manifest>
		</jar>

	</target>

	<!-- 
		Target: make_server_jar
		
		builds a jar that contains only the Diffusive classes 
	-->
	<property name="jars" value="jars" />
	<property name="server_jar_file" value="${app_name}_${app_type_server}_${version}.jar" />
	<target name="make_server_jar" depends="clean_dist, init, configure_logging" description="build the server jar file containing only Diffusive classes">
		<echo>***** Building single jar file for ${app_name} *****</echo>
		<echo>Base Directory: ${basedir}</echo>
		<echo>Directory containing classes: ${build}</echo>
		<echo>Directory to contain jar: ${dist}/${jars}</echo>
		<echo>Directory contianing external libraries: ${env.JAVA_LIBS}</echo>

		<jar destfile="${dist}/${jars}/${server_jar_file}">
			<fileset dir="${build}" includes="**/*.class" />
			<fileset dir="${build}" includes="${log4j_config}" />			

			<manifest>
				<attribute name="Ant" value="${user.name}" />
				<!-- Information about the program itself -->
				<attribute name="Implementation-Vendor" value="Rob Philipp" />
				<attribute name="Implementation-Title" value="${app_name}" />
				<attribute name="Implementation-Version" value="${version}" />
				<!-- Runtime information -->
				<attribute name="Main-Class" value="org/microtitan/diffusive/diffuser/restful/server/RestfulDiffuserServer." />
				<attribute name="Class-Path" value="${internal_class_path}" />
			</manifest>
		</jar>

	</target>

	<!-- 
		Target: make_combined_launcher_jar
		
		builds a single launcher jar that contains all the dependent jar files 
	-->
	<property name="single_jar" value="single_jar" />
	<target name="make_combined_launcher_jar" depends="clean_dist, init, configure_logging" description="build a jar file that contains all the dependent code">
		<echo>***** Building single jar file for ${app_name} *****</echo>
		<echo>Base Directory: ${basedir}</echo>
		<echo>Directory containing classes: ${build}</echo>
		<echo>Directory to contain jar: ${dist}/${single_jar}</echo>
		<echo>Directory contianing external libraries: ${env.JAVA_LIBS}</echo>

		<jar destfile="${dist}/${single_jar}/${launcher_jar_file}">
			<fileset dir="${build}" includes="**/*.class" />
			<fileset dir="${build}" includes="${log4j_config}" />			

			<zipfileset src="${java-libs}/${log4j}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${junit}" excludes="META-INF/*" />

			<zipfileset src="${java-libs}/${freezedry}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${json-libs}/${json}" excludes="META-INF/*" />

			<zipfileset src="${java-libs}/${abdera-libs}/${abdera_core}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${abdera-libs}/${abdera_i18n}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${abdera-libs}/${abdera_parser}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${abdera-libs}/${axiom_api}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${abdera-libs}/${axiom_impl}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${abdera-libs}/${commons-logging}" excludes="META-INF/*" />
			
			<zipfileset src="${java-libs}/${jersey-libs}/${grizzly_framework}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${jersey-libs}/${grizzly_http}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${jersey-libs}/${grizzly_http_server}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${jersey-libs}/${jersey_client}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${jersey-libs}/${jersey_core}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${jersey-libs}/${jersey_grizzly}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${jersey-libs}/${jersey_server}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${jersey-libs}/${jsr311_api}" excludes="META-INF/*" />
			
			<zipfileset src="${java-libs}/${javassist-libs}/${javassist}" excludes="META-INF/*" />

			<zipfileset src="${java-libs}/${commons-io-libs}/${commons_io}" excludes="META-INF/*" />

			<manifest>
				<attribute name="Ant" value="${user.name}" />
				<!-- Information about the program itself -->
				<attribute name="Implementation-Vendor" value="Rob Philipp" />
				<attribute name="Implementation-Title" value="${app_name}" />
				<attribute name="Implementation-Version" value="${version}" />
				<!-- Runtime information -->
				<attribute name="Main-Class" value="org/microtitan/diffusive/diffuser/restful/server/RestfulDiffuserServer." />
				<attribute name="Class-Path" value="${internal_class_path}" />
			</manifest>
		</jar>
	</target>
	
	<!-- 
		Target: make_combined_launcher_jar
		
		builds a single launcher jar that contains all the dependent jar files 
	-->
	<property name="single_jar" value="single_jar" />
	<target name="make_combined_server_jar" depends="clean_dist, init, configure_logging" description="build a jar file that contains all the dependent code">
		<echo>***** Building single jar file for ${app_name} *****</echo>
		<echo>Base Directory: ${basedir}</echo>
		<echo>Directory containing classes: ${build}</echo>
		<echo>Directory to contain jar: ${dist}/${single_jar}</echo>
		<echo>Directory contianing external libraries: ${env.JAVA_LIBS}</echo>

		<jar destfile="${dist}/${single_jar}/${server_jar_file}">
			<fileset dir="${build}" includes="**/*.class" />
			<fileset dir="${build}" includes="${log4j_config}" />			

			<zipfileset src="${java-libs}/${log4j}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${junit}" excludes="META-INF/*" />

			<zipfileset src="${java-libs}/${freezedry}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${json-libs}/${json}" excludes="META-INF/*" />

			<zipfileset src="${java-libs}/${abdera-libs}/${abdera_core}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${abdera-libs}/${abdera_i18n}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${abdera-libs}/${abdera_parser}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${abdera-libs}/${axiom_api}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${abdera-libs}/${axiom_impl}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${abdera-libs}/${commons-logging}" excludes="META-INF/*" />
			
			<zipfileset src="${java-libs}/${jersey-libs}/${grizzly_framework}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${jersey-libs}/${grizzly_http}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${jersey-libs}/${grizzly_http_server}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${jersey-libs}/${jersey_client}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${jersey-libs}/${jersey_core}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${jersey-libs}/${jersey_grizzly}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${jersey-libs}/${jersey_server}" excludes="META-INF/*" />
			<zipfileset src="${java-libs}/${jersey-libs}/${jsr311_api}" excludes="META-INF/*" />
			
			<zipfileset src="${java-libs}/${javassist-libs}/${javassist}" excludes="META-INF/*" />

			<zipfileset src="${java-libs}/${commons-io-libs}/${commons_io}" excludes="META-INF/*" />

			<manifest>
				<attribute name="Ant" value="${user.name}" />
				<!-- Information about the program itself -->
				<attribute name="Implementation-Vendor" value="Rob Philipp" />
				<attribute name="Implementation-Title" value="${app_name}" />
				<attribute name="Implementation-Version" value="${version}" />
				<!-- Runtime information -->
				<attribute name="Main-Class" value="org/microtitan/diffusive/launcher/DiffusiveLoader" />
				<attribute name="Class-Path" value="${internal_class_path}" />
			</manifest>
		</jar>
	</target>
	
	<!-- 
		Target: make_release
		
		creates the directory with the release code and zip files. calls the dependencies for make the freeze dry jars 
	-->
	<property name="release" location="${dist}/${app_name}_v${version}" />
	<target name="make_release" 
			depends="make_launcher_jar, make_server_jar, make_combined_launcher_jar, make_combined_server_jar" 
			description="builds the single and freeze-dry jars and creates the release structure">
		
		<property name="rel_src" value="src" />
	
		<!-- remove the release directory (Diffusive_vX.X.X) if it already exists -->
		<delete dir="${release}" failonerror="false"/>
		
		<!-- create the release directory and its subdirectorys: src, single_jar, jars -->
		<mkdir dir="${release}" />
		<mkdir dir="${release}/${single_jar}" />
		<mkdir dir="${release}/${jars}" />
		<mkdir dir="${release}/${rel_src}" />
		
		<!-- copy the log4j configuration files into the appropriate directories -->
		<copy file="log4j.xml" todir="${release}/${single_jar}" />
		<copy file="log4j.xml" todir="${release}/${jars}" />
		<copy file="log4j.xml" todir="${release}/${rel_src}" />
		
		<!-- copy the run configurations to the top-level directory -->
		<copy file="${restful_server_config}" todir="${release}/${single_jar}" />
		<copy file="${restful_server_config}" todir="${release}/${jars}" />
		<copy file="${restful_server_config}" todir="${release}/${rel_src}" />

		<copy file="${restful_diffuser_config}" todir="${release}/${single_jar}" />
		<copy file="${restful_diffuser_config}" todir="${release}/${jars}" />
		<copy file="${restful_diffuser_config}" todir="${release}/${rel_src}" />

		<copy file="${random_diffuser_strategy_config}" todir="${release}/${single_jar}" />
		<copy file="${random_diffuser_strategy_config}" todir="${release}/${jars}" />
		<copy file="${random_diffuser_strategy_config}" todir="${release}/${rel_src}" />

		<copy file="${random_weighted_diffuser_strategy_config}" todir="${release}/${single_jar}" />
		<copy file="${random_weighted_diffuser_strategy_config}" todir="${release}/${jars}" />
		<copy file="${random_weighted_diffuser_strategy_config}" todir="${release}/${rel_src}" />

		<!-- copy the this build file to the release src directory -->
		<copy file="build.xml" todir="${release}/${rel_src}" />
		
		<!-- copy the single jar to the single jar release directory -->
		<copy file="${dist}/${single_jar}/${launcher_jar_file}" todir="${release}/${single_jar}" />
		<copy file="${dist}/${single_jar}/${server_jar_file}" todir="${release}/${single_jar}" />
		<zip destfile="${release}/${single_jar}/${app_name}_${version}.zip" basedir="${release}/${single_jar}" includes="*.*" />
		
		<!-- copy the multiple jars to the jars release directory -->
		<copy file="${dist}/${jars}/${launcher_jar_file}" todir="${release}/${jars}" />
		<copy file="${dist}/${jars}/${server_jar_file}" todir="${release}/${jars}" />
		<copy file="${java-libs}/${junit}" todir="${release}/${jars}" />
		<copy file="${java-libs}/${log4j}" todir="${release}/${jars}" />
		
		<copy file="${java-libs}/${freezedry}" todir="${release}/${jars}" />
		<copy file="${java-libs}/${json-libs}/${json}" todir="${release}/${jars}" />

		<copy file="${java-libs}/${abdera-libs}/${abdera_core}" todir="${release}/${jars}" />
		<copy file="${java-libs}/${abdera-libs}/${abdera_i18n}" todir="${release}/${jars}" />
		<copy file="${java-libs}/${abdera-libs}/${abdera_parser}" todir="${release}/${jars}" />
		<copy file="${java-libs}/${abdera-libs}/${axiom_api}" todir="${release}/${jars}" />
		<copy file="${java-libs}/${abdera-libs}/${axiom_impl}" todir="${release}/${jars}" />
		<copy file="${java-libs}/${abdera-libs}/${commons-logging}" todir="${release}/${jars}" />
		
		<copy file="${java-libs}/${jersey-libs}/${grizzly_framework}" todir="${release}/${jars}" />
		<copy file="${java-libs}/${jersey-libs}/${grizzly_http}" todir="${release}/${jars}" />
		<copy file="${java-libs}/${jersey-libs}/${grizzly_http_server}" todir="${release}/${jars}" />
		<copy file="${java-libs}/${jersey-libs}/${jersey_client}" todir="${release}/${jars}" />
		<copy file="${java-libs}/${jersey-libs}/${jersey_core}" todir="${release}/${jars}" />
		<copy file="${java-libs}/${jersey-libs}/${jersey_grizzly}" todir="${release}/${jars}" />
		<copy file="${java-libs}/${jersey-libs}/${jersey_server}" todir="${release}/${jars}" />
		<copy file="${java-libs}/${jersey-libs}/${jsr311_api}" todir="${release}/${jars}" />
		
		<copy file="${java-libs}/${javassist-libs}/${javassist}" todir="${release}/${jars}" />

		<copy file="${java-libs}/${commons-io-libs}/${commons_io}" todir="${release}/${jars}" />
		<zip destfile="${release}/${jars}/${app_name}_${version}.zip" basedir="${release}/${jars}" includes="*.*" />
		
		<!-- copy the soure files into the release source directory, and zip everything up -->
		<copy todir="${release}/${rel_src}"><fileset dir="${src}" includes="**/*.java" /></copy>
		<zip destfile="${release}/${rel_src}/${app_name}_src_${version}.zip" basedir="${release}/${rel_src}" includes="**/*.java, **/*.xml" />
		
	</target>
</project>
